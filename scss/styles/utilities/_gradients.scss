//  ------------------------------------------------------------
//  Gradients
//  ------------------------------------------------------------

@if $enable-gradients {

.gradient {
  --deg: 180deg;
  background-image: linear-gradient(var(--deg), var(--surf-1), var(--surf-2), var(--surf-3));
}

// Reverse degree to keep .gradient direction consistent with alternating surface colors.
@if $enable-manual-themes {
  :where([data-prefers-dark=true]) {
    .gradient {
      --deg: 0deg;
    }    
  }
}
@else {
   @media (prefers-color-scheme: dark) {
    :where(html) {
      .gradient {
        --deg: 0deg;
      }       
    }
  }  
}

@if $enable-theme-colors and $enable-primary-colors {
  :where(.gradient-dark, .gradient-light, .gradient-blue, .gradient-red, .gradient-green, .gradient-orange, .gradient-cyan) {
    @include colored-gradients;
  }
}
@else {
  @if $enable-theme-colors {
    :where(.gradient-dark, .gradient-light) {
      @include colored-gradients;
    }
  }
  @if $enable-primary-colors {
    :where(.gradient-blue, .gradient-red, .gradient-green, .gradient-orange, .gradient-cyan) {
      @include colored-gradients;
    }
  }
}

@if $enable-theme-colors { 

.gradient-dark {
  --grad-txt: var(--text-dark);
  --grad-bg: var(--gradient-dark);
}

.gradient-light {
  --grad-txt: var(--text-light);
  --grad-bg: var(--gradient-light);
}

} // END [if/theme-colors]

@if $enable-primary-colors { 

.gradient-blue {
  --grad-txt: var(--text-dark);
  --grad-bg: var(--gradient-blue);    
}

.gradient-red {
  --grad-txt: var(--text-dark);
  --grad-bg: var(--gradient-red);
}

.gradient-green {
  --grad-txt: var(--text-dark);
  --grad-bg: var(--gradient-green);
}

.gradient-orange {
  --grad-txt: var(--text-light);
  --grad-bg: var(--gradient-orange);
}

.gradient-cyan {
  --grad-txt: var(--text-light);
  --grad-bg: var(--gradient-cyan);
}
  
} // END [if/primary-colors]

} // END [if/gradients]