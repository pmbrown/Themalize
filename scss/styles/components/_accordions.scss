//  ------------------------------------------------------------
//  Details disclosure element accordions
//  Requires accordions.js polyfill for Firefox [assets/js]
//  ------------------------------------------------------------

@if $enable-accordions {

:where(html) {
  @if $enable-caret-down-svg and $enable-caret-up-svg {
    --details-open: var(--caret-down);
    --details-closed: var(--caret-up);
  }
  @else {
    --details-open: #{$caret-down};
    --details-closed: #{$caret-up};
  }
}

:where(.details, .accordion) {
  max-inline-size: var(--details-max-width);
}

:where(.accordion details) {
  margin-block-end: 0;
}

:where(.details summary, .accordion summary) {
  --ico: var(--summary-ico);
  color: var(--summary-txt);
  font-weight: 600;
  display: flex;
  padding-block: var(--details-py);
  padding-inline: var(--details-px);
  border: var(--details-bd-width) solid var(--details-bd-color);
  border-radius: var(--details-radius);
  background-color: var(--summary-bg);
}

:where(.accordion summary) {
  border-radius: 0; 
}

:where(.accordion details:not(:first-child) summary) {
  border-block-start: none;
}

:where(.accordion details:first-child summary) {
  border-start-start-radius: var(--details-radius);
  border-start-end-radius: var(--details-radius);
}

:where(.accordion details:last-child summary) {
  border-end-start-radius: var(--details-radius);
  border-end-end-radius: var(--details-radius);
}

:where(.details[open] summary, .accordion [open] summary) {
  margin-block-end: 0;
  border-block-end: var(--details-bd-width) solid var(--details-bd-color);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
}

:where(.accordion details[open]:last-child summary) {
  border-end-start-radius: 0;
  border-end-end-radius: 0;
}

// Body
:where(.details-body) {
  padding-block: var(--details-py);
  padding-inline: var(--details-px);
  border: var(--details-bd-width) solid var(--details-bd-color);
  border-block-start: none;
  border-radius: var(--details-radius);
  border-start-start-radius: 0;
  border-start-end-radius: 0;
}

:where(.accordion .details-body) {
  border-radius: 0;
}

:where(.accordion details:last-child[open] .details-body) {
  border-end-start-radius: var(--details-radius);
  border-end-end-radius: var(--details-radius);
}

:where(.details-body :last-child) {
  --mb: 0;
}

// Open and close icons.
// @extend %icon-mask chains all icon styles together to minimise code.
// @include icon-mask can be used to duplicate icon styles.
:where(.details summary, .accordion summary):after {
  --ico: var(--summary-ico);
  --svg: var(--details-open);
  @extend %icon-mask;
  margin-inline-start: auto;
  margin-block-start: calc(var(--fs) / 4);
}

:where(.details[open] summary, .accordion details[open] summary):after {
  --svg: var(--details-closed);
}

@if $enable-theme-colors {

.details-light {
  --summary-txt: #000;
  --summary-ico: #000;
  --summary-bg: var(--surf-1-light);
  --details-bd-color: var(--surf-3-light);
}

.details-dark {
  --summary-txt: #fff;
  --summary-ico: #fff;
  --summary-bg: var(--surf-1-dark);
  --details-bd-color: var(--surf-3-dark);
}

} // END [if/theme-colors]

@if $enable-primary-colors {

.details-blue {
  --summary-txt: #fff;
  --summary-ico: #fff;
  --summary-bg: var(--blue);
  --details-bd-color: var(--blue-lighter);
}

.details-red {
  --summary-txt: #fff;
  --summary-ico: #fff;
  --summary-bg: var(--red);
  --details-bd-color: var(--red-lighter);
}

.details-green {
  --summary-txt: #fff;
  --summary-ico: #fff;
  --summary-bg: var(--green);
  --details-bd-color: var(--green-lighter);
}

.details-orange {
  --summary-txt: #000;
  --summary-ico: #000;
  --summary-bg: var(--orange);
  --details-bd-color: var(--orange-darker);
}

.details-cyan {
  --summary-txt: #000;
  --summary-ico: #000;
  --summary-bg: var(--cyan);
  --details-bd-color: var(--cyan-darker);
}

} // END [@if/primary-colors]

} // END [@if/details]
