//  ------------------------------------------------------------
//  Dialog element modals
//  Requires dialog.js [assets/js]
//  ------------------------------------------------------------

@if $enable-dialogs {

// Dialog
:where(dialog) {
  color: var(--dialog-txt);
  margin: auto;
  margin-block-start: var(--dialog-top);  
  padding: 0;
  width: var(--dialog-width);
  max-width: var(--dialog-max-width); 
  border-width: var(--dialog-bd-width);
  border-color: var(--dialog-bd-color);
  border-radius: var(--dialog-radius); 
  background-color: var(--dialog-bg);
}

// Dialog header
:where(dialog :is(header, .dialog-header)) {
  @if $enable-icon-mixins or $enable-icon-styles {
    --ico: var(--dialog-header-txt); 
  }
  color: var(--dialog-header-txt);
  position: sticky;
  align-self: start;
  top: 0;
  display: flex;
  align-items: center;
  column-gap: 1rem;
  border-block-end: var(--dialog-bd-width) solid var(--dialog-bd-color);
  background-color: var(--dialog-header-bg);
  padding-block: .5rem;
  padding-inline-start: 1rem;
  padding-inline-end: .75rem;
  border-start-start-radius: 0;
}

:where(dialog :is(header, .dialog-header) *) {
  @if $enable-icon-mixins or $enable-icon-styles {
    --ico: var(--dialog-header-txt); 
  }
  color: var(--dialog-header-txt);
}

:where(dialog :is(header, .dialog-header) *:is(h1, h2, h3, h4, h5, h6, p)) {
  --mb: 0;
}

// Heading sizes block-padding varies with font-family selection.
:where(dialog :is(header, .dialog-header) *:is(h1, h2, h3, h4, h5, h6)) {
  padding-block-start: .2rem;
  padding-block-end: .4rem;
}

// Dialog body wrapper
:where(.dialog-body) {
  padding-block: var(--dialog-body-py);
  padding-inline: var(--dialog-body-px);
  background-color: var(--dialog-body-bg);
}

:where(.dialog-body :last-child) {
  --mb: 0;
}

:where(.dialog-basic) {
  padding-block: var(--dialog-body-py);
  padding-inline: var(--dialog-body-px);
}

:where(.dialog-basic:has(h1:first-child, h2:first-child, h3:first-child, h4:first-child, h4:first-child, h4:first-child)) {
  padding-block-end: 1rem;
}

:where(.dialog-basic *:has(+ .backdrop)) {
  --mb: 0;
}

// Image dialog with image button

// Image button
:where(.dialog-img-btn) {
  --fs: var(--fs-xxs);
  --btn-py: 0;
  --btn-px: 0;
}

:where(.dialog-img-btn:hover) {
  cursor: zoom-in;
}

// Image dialog
:where(.dialog-img) {
  --dialog-body-py: 0;
  --dialog-body-px: 0;
  --dialog-max-width: fit-content;
}
  
:where(.dialog-img img) {
  margin-inline: auto;
  object-fit: cover;
}

:where(.dialog-img figure) {
  margin-block-end: 0;
}

:where(.dialog-img figcaption) {
  padding-block: .5rem;
  padding-inline: 1rem;
}

// Dialog close buttons

// Essential icons
:where(dialog :is(header, .dialog-header) [data-close]):before,
:where(.dialog-img-close):before {
  --ico: var(--dialog-header-txt);
  @if $enable-close-svg {
    --svg: var(--close);
  }
  @else {
    --svg: #{$close};
  }
  @extend %icon-mask;
}

// Header close button style
:where(dialog :is(header, .dialog-header) [data-close]) {
  --btn-bg: transparent;
  --btn-hover: transparent;
  --btn-bd-color: transparent;
  --btn-py: .25rem;
  --btn-px: .5rem;
  margin-inline-start: auto;
}

:where(dialog :is(header, .dialog-header) [data-close]:is(:focus, :active)) {
  outline: none;
  box-shadow: none;
}

// Image dialog close button style (doesn't apply to header, .dialog-header close button if used)
.dialog-img > button[data-close] {
  --btn-radius: 0;
  position: absolute;
  inset-block-start: 0;
  inset-inline-end: 0;
  border-end-start-radius: inherit;
  border-block-start: none;
  border-inline-end: none;
}

// Dialog backdrop

::backdrop {
  background: #00000099;
}

// Adding <div class="backdrop" data-close></div> as last child
// in dialog allows clicking outside element to close dialog.
:where(.backdrop) {
  position: fixed;
  inset: 0;
  z-index: -1;
  display: block;
  content: "";
}

// Colors

@if $enable-theme-colors {

.dialog-dark {
  --dialog-header-txt: #fff;
  --dialog-header-bg: var(--surf-2-dark);
  --dialog-bd-color: var(--surf-3-dark);
}

.dialog-light {
  --dialog-header-txt: #000;
  --dialog-header-bg: var(--surf-2-light);
  --dialog-bd-color: var(--surf-3-light);
}

} // END [if/theme-colors]

@if $enable-primary-colors {

.dialog-blue {
  --dialog-header-txt: #fff;
  --dialog-header-bg: var(--blue);
  --dialog-bd-color: var(--blue);
}

.dialog-red { 
  --dialog-header-txt: #fff;
  --dialog-header-bg: var(--red);
  --dialog-bd-color: var(--red);
}

.dialog-green {
  --dialog-header-txt: #fff;
  --dialog-header-bg: var(--green);
  --dialog-bd-color: var(--green);
}

.dialog-orange {
  --dialog-header-txt: #000;
  --dialog-header-bg: var(--orange);
  --dialog-bd-color: var(--orange);
}

.dialog-cyan {
  --dialog-header-txt: #000;
  --dialog-header-bg: var(--cyan);
  --dialog-bd-color: var(--cyan);
}

} // END [if/primary-colors]

} // END [if/dialogs]
