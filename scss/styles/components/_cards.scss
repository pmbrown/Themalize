//  ------------------------------------------------------------
//  Cards
//  ------------------------------------------------------------

@if $enable-cards {

:where(.card-basic, .card-link) {
  max-inline-size: var(--card-max-width); 
  padding-block-start: var(--card-pt);
  padding-block-end: var(--card-pb);
  padding-inline: var(--card-px);
  border: var(--card-bd-width) solid var(--card-bd-color);
  border-radius: var(--card-radius);
  background-color: var(--card-bg);
}

:where(.card-link) {
  position: relative;
}

:where(.card-basic :last-child, .card-link :last-child)  {
  --mb: 0;
}

.card-link a:before {
  content: "";
  display: block;
  position: absolute;
  inset-block-start: 0;
  inset-block-end: 0;
  inset-inline-start: 0;
  inset-inline-end: 0;
}

:where(.card-link :focus-visible) {
  outline: none;
}

:where(.card-link:is(:focus-within, :hover)) {
  background-color: var(--card-hover);
  cursor: pointer;
}

:where(.card-link:focus-within) {
  outline: var(--card-focus);
}

// Cards with headers

:where(.card, .card-sm) {
  max-inline-size: var(--card-max-width);
  background-color: var(--card-bg);
}

.card-sm {
  --card-px: .75rem;
  --card-title-h-py: .65rem;  
  --card-pt: .5rem;
  --card-pb: .75rem;
}

:where(.card-title) {
  @if $enable-icon-mixins or $enable-icon-styles {
    --ico: var(--card-title-txt);
  }
  color: var(--card-title-txt);
  display: block;
  padding-block: var(--card-title-py);
  padding-inline: var(--card-px);
  border-start-start-radius: var(--card-radius);
  border-start-end-radius: var(--card-radius);
  background-color: var(--card-title-bg);
}

:where(.card-title:is(h1, h2, h3, h4, h5, h6, p)) {
  --mb: 0;
}

:where(.card-title:is(h1, h2, h3, h4, h5, h6)) {
  padding-block: var(--card-title-h-py);
}

:where(.card-body) {
  padding-block-start: var(--card-pt);
  padding-block-end: var(--card-pb);
  padding-inline: var(--card-px);
}

:where(.card-body, .card-list, .card-list-links) {  
  border: var(--card-bd-width) solid var(--card-bd-color);
  border-block-start: none;
  border-end-start-radius: var(--card-radius);
  border-end-end-radius: var(--card-radius);
}

:where(.card-body :last-child) {
  --mb: 0;
}

:where(.card-list, .card-list-links) {
  --marker: '';
  --pl: 0;
  --mb: 0;
}

:where(.card-list li, .card-list-links li a) {
  padding-block: var(--card-title-py);
  padding-inline: var(--card-px);
}

:where(.card-list, .card-list-links) li:not(:last-child) {
  border-block-end: 1px solid var(--card-bd-color);
}

:where(.card-list-links li a) {
  display: block;
}

:where(.card-list-links a:is(:hover, :focus)) {
  background-color: var(--card-hover);
}

:where(.card-list-links *:last-child a:is(:hover, :focus)) {
  --card-list-hover: calc(var(--card-radius) - 1px);
  border-radius: 0 0 var(--card-list-hover) var(--card-list-hover);
}

// Card colors

@if $enable-theme-colors {

.card-light {
  --card-title-txt: #000;
  --card-title-bg: var(--surf-2-light);
  --card-bd-color: var(--card-title-bg);
}

.card-dark {
  --card-title-txt: #fff;
  --card-title-bg: var(--surf-2-dark);
  --card-bd-color: var(--card-title-bg);
}

} // END [if/theme-colors]

@if $enable-primary-colors {
.card-blue {
  --card-title-txt: #fff;
  --card-title-bg: var(--blue);
  --card-bd-color: var(--card-title-bg);
  --card-hover: var(--blue-lighter);
}

.card-red {
  --card-title-txt: #fff;
  --card-title-bg: var(--red);
  --card-bd-color: var(--card-title-bg);
}

.card-green {
  --card-title-txt: #fff;
  --card-title-bg: var(--green);
  --card-bd-color: var(--card-title-bg);
}

.card-orange {
  --card-title-txt: #000;
  --card-title-bg: var(--orange);
  --card-bd-color: var(--card-title-bg);
}

.card-cyan {
  --card-title-txt: #000;
  --card-title-bg: var(--cyan);
  --card-bd-color: var(--card-title-bg);
}

} // END [if/primary-colors]

} // END [if/cards]